'''
Given any initial natural number, consider the sequence 
of numbers generated by repeatedly following the rule:

divide by two if the number is even or
multiply by 3 and add 1 if the number is odd.
The Collatz conjecture states that this sequence always 
terminates at 1. For example, the sequence generated by 
23 is:

23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1

'''
# The Collatz conjecture
# Takes input n and computes output named result

import simplegui

# global state

result = 1
iteration = 0
max_num = 0

# helper functions

def init(start):
    """Initializes n."""
    global result
    result = start
    print "Input is", result
    
def get_next(n):
    """???  Part of mystery computation."""
    if (n % 2) == 0:
        return n / 2
    else:
        return 3 * n +1


# timer callback

def update():
    """???  Part of mystery computation."""
    global result, max_num
     
    result = get_next(result)
    print result
    if result > max_num: max_num = result
        
    if result == 1:
        timer.stop()
        print "Maximum =",max_num

# register event handlers

timer = simplegui.create_timer(1, update)

# start program
init(217)
timer.start()